package com.test;

import com.wyf.util.keywordsfilter.KeyWordsFilterUtil;

public class FilterTest {

    public static void main(String[] args) {
        KeyWordsFilterUtil util = new KeyWordsFilterUtil();
        String text = "体炸";//"共产党中华人民共和国国旗法轮功订阅管理posts-57,comments-53,trackbacks-0Conway生命游戏告全体网民书版权申明：本文为博主窗户(ColinCai)原创，欢迎转帖。如要转贴，必须注明原文网址http://www.cnblogs.com/Colin-Cai/p/9986679.html作者：窗户QQ/微信：6679072E-mail：6679072@qq.com1970年，英国数学家Conway发明了生命游戏。抛开元胞自动机的复杂概念，我们只是去感受一下二维的生命游戏，这其实是元胞自动机的一个特例生命游我们先考虑有限的情况，对于mXn的方格，每个方格都会有一个状态，该状态有两个可能值：有生命、无生命如上图8X8的方格，红色的格子代表状态为有生命，白色的格子代表状态为无生命。生命游戏是一代一代的演化，每一代就是所有格子的一组状态。我们来说演化规则，对于每个格子，我们来数这个格子所有的周围格子状态为由生命的数目。这里的周围格子是指：这个格子的上、下、左、右、左上、右上、左下、右下这8个格子。当然，有例外，角上的格子只有3个周围格子，而边上的格子只有5个周围格子。于是，我们把上面这个图的每个格子的周围有生命格子数目标注出来下一代所有格子状态由以下规则确定：1.如果周围有生命格子的数目小于2，则下一代这个格子状态为无生命(解释为太孤单)。2.如果周围有生命格子的数目大于3，则下一代这个格子为无生命(解释为周围生命太多，资源消耗厉害)。3.如果周围有生命格子的数目等于2，则下一代这个格子的状态继续保持当前的状态。4.如果周围有生命格子的数目等于3，则下一代这个格子的状态为有生命于是，下一代应为如下把各代组成动画如下只可惜这个到了第6代，所有的格子都变成无生命状态。震荡子有一类神奇的图案，可以反复不断的循环，称为震荡子。上面这个震荡子周期为15。枪型下面这个图是BillGosper于1970年发现的第一个Gun，你看那一个个向右下方向而去的像不像“子弹\"？实际上，Gun描述的是一个无限的方格，因为子弹是在不断变多的，图形的尺寸实际上会越来越大，但在有限的方格情况下其实是震荡子(下图实际上是虚拟的从无限的方格中截取的有限图像)这是发现的第二个Gun以我的能力，我是完全不知道这两个Gun是怎么被拼出来的程序实现生命游戏规则简单，我想在学习程序的过程中实现一个并不是什么难事。我上面的这些动画实际上也是用程序生成的，我推荐python用cv2库，它属于opencv，开发效率还是很高的。真想从底层动手，那就用C语言造轮子吧，只要体力好，也没什么不可以。如果要生成bmp，研究一下bmp文件的格式,wiki上就有，https://en.wikipedia.org/wiki/BMP_file_format如果想要jpeg，那么可以使用libjpeg，只是libjpeg只有从bmp文件转成jpeg，默认接口里没有从内存转的，这可能不太方便，需要的话得自己来加个接口，很多年前我加过计算周围生命格子数我想大部分的人来计算都是对于某个点，依次数周围的格子，然后挨个相加，从而计算整个矩阵的加法数量的线性系数是7（因为大多格子周围都是8个格子，要做7次加法），也就是加法数量除以矩阵规模(节点数)的极限为7。如果只从加法数量来说，这个规模不能让人满意。下面这个方法会好很多。第一步，同行的两两结对相加a0,0+a0,1a0,2+a0,3a0,4+a0,5......an,0+an,1an,2+an,3an,4+an,5......这样使用线性系数0.5次加第二步，每个格子再多加一次得到这个格子自身和左、右两格的和显然，这次使用加法数量系数为1。于是我们看到了，使用系数为1.5的加法数量就完成了每个格子自身和左、右两格的和，而本来平凡的手段这个系数为2。第三步，在此基础上，使用第一步、和第二步，只是第一步和第二步从矩阵的横向考虑，现在统统改成纵向这样就得到了每个格子以自身为中心的九宫格的九个格子之和。这样累计一下，系数翻个倍，为3。第四步，上面其实多加了自身这个格子，于是减掉自身。系数就变成4，比之前7要好。以上只是简单的说一说道理，而真正在优化卷积、中值滤波等应用的时候，要比这个复杂的多。稀疏矩阵先放个动画我们似乎在上述动画中看到了星际战争^_^图像中大多数格子的状态都是无生命，这种情况下，如果还是依次去计算矩阵的每一个格子，是个很大的浪费。实际上，我们只需要记录其中状态为有生命的格子就行了，这是因为，下一代有生命的格子就在这一代有生命的格子的近旁。这就是稀疏矩阵的出发点，当然，稀疏矩阵本身有着非常多的算法，基本都是本着相近的元素会发生相互作用，从而相近的元素要给予更为快速的查找。对于完全无序的集合，稀疏矩阵的元素一旦多起来，效率非常低下。有兴趣的就自己去研究吧，比如四叉树就是常用的空间索引分类:算法标签:生命游戏,稀疏矩阵好文要顶关注我收藏该文窗户关注-0粉丝-39+加关注00«上一篇：汉诺塔——各种编程范式的解决postedon2018-11-2013:27窗户阅读(67)评论(0)编辑收藏刷新评论刷新页面返回顶部注册用户登录后才能发表评论，请登录或注册，访问网站首页。【推荐】超50万VC++源码:大型组态工控、电力仿真CAD与GIS源码库！【活动】华为云普惠季1折秒杀狂欢继续【工具】SpreadJS纯前端表格控件，可嵌入应用开发的在线Excel【腾讯云】拼团福利，AMD云服务器8元/月qcloud相关博文：·生命游戏介绍·javascript小游戏--生命游戏·Python,OpenGL生命游戏·生命游戏。·题目-生命游戏最新新闻：·又一家无人货架宣布倒闭！哪些教训值得反思？·亚马逊HQ2新总部落户谁家？竞标榜单20强各出奇招·滴滴出行在多伦多开设实验室研究AI和智能驾驶·Facebook连跌三月创历史记录分析师称下跌还没停止·因欧盟“链接税”：谷歌或在当地关闭新闻服务»更多新闻...Copyright©2018窗户PoweredBy:博客园模板提供：沪江博客<\t2018年11月\t>日\t一\t二\t三\t四\t五\t六28\t29\t30\t31\t1\t2\t34\t5\t6\t7\t8\t9\t1011\t12\t13\t14\t15\t16\t1718\t19\t20\t21\t22\t23\t2425\t26\t27\t28\t29\t30\t12\t3\t4\t5\t6\t7\t8ZerovsMaster(No.12)昵称：窗户园龄：1年6个月粉丝：39关注：0+加关注常用链接我的随笔我的评论我的参与最新评论我的标签我的标签递归(7)RSA(6)Scheme(6)C语言(5)抽象代数(5)python(4)平方根(3)手算平方根(3)bc(2)verilog(2)更多随笔分类解决方案(6)软件(14)数学(10)算法(18)随想(7)硬件(3)积分与排名积分-42820排名-11337最新评论1.Re:我为什么写博客？博主讲的很有道理，我还是一名大二的学生，暑假开始记录博客，纯粹的是看网课，记录一些自己的学习进度，我想等我慢慢把基础打好，我会逐渐把记录笔记换做和博主一样，变成谈论学习感受和学习方法的。虽然现在博主很......--LittlePage2.Re:我为什么写博客？支持下--张桦林的小号3.Re:这真的是初三教科书里的概率题么?不过全都放在7号盒子里不是最大的吗？--beautifulzzzz4.Re:这真的是初三教科书里的概率题么?老哥，博士生的素养～小问题，大研究哈！--beautifulzzzz5.Re:Scheme来实现八皇后问题(2)@mxrmxr是啊，连小学生都明白的道理，很多程序员却不明白，这是一种悲哀。我的文章是给工程师朋友们看的，不明白的正好可以补一下，明白的也可回忆回忆。再者，我一般强调的是知其所以然，而不是知其然。另外......--窗户阅读排行榜1.python和C语言混编的几种方式(8935)2.数学对于人类意味着什么(4335)3.12(13)个球1个不同重量称3次称出的详细分析(2857)4.平方根的C语言实现(三)——最终程序实现(2316)5.python使用rsa库做公钥解密(网上别处找不到)(2221)6.什么是算法(2138)7.VHDL和verilog应该先学哪个？(1369)8.verilog抓外部低频输入信号的上升沿和下降沿(1312)9.围棋规则的计算机实现(1253)10.我博客上的围棋js程序(1191)11.自然数到底可以表示到多大?(1107)12.智能家居系统结构(1094)13.再谈谈数学(1024)14.如何设计一个电子计算器(1001)15.平方根的C语言实现(一)——浮点数的存储(992)16.谨慎对待人工智能(987)17.平方根的C语言实现(二)——手算平方根的原理(974)18.C语言/原子/编译，你真的明白了吗？(876)19.高速网络包过滤(684)20.王垠为什么能成网红？(625)21.古中国数学家的计算力真是惊人(609)22.一个简单的完全信息动态博弈的解答(603)23.最多7次比较解决5个数的排序问题的解法(573)24.怀念Galois(573)25.用sed实现wc-w的功能(484)26.被偷贴后的郁闷(465)27.shell编程/字库裁剪(2)——编程过程(459)28.我为什么写博客？(459)29.shell编程/字库裁剪(1)——想法(437)30.python访问http的GET/POST(434)31.深入设计电子计算器(一)——CPU框架及指令集设计(423)32.scratch写的图灵机(407)33.使用python操作mysql(406)34.RSA简介(一)——数论原理(394)35.RSA简介(四)——求逆算法(391)36.斐波那契数列的算法分析(383)37.我的第一篇博客(360)38.这真的是初三教科书里的概率题么?(327)39.bc计算A股上市新股依次涨停股价(310)40.有限域(2)——理想和商环(309)评论排行榜1.数学对于人类意味着什么(13)2.自然数到底可以表示到多大?(7)3.再谈谈数学(5)4.斐波那契数列的算法分析(4)5.被偷贴后的郁闷(3)推荐排行榜1.数学对于人类意味着什么(21)2.谨慎对待人工智能(4)3.智能家居系统结构(3)4.再谈谈数学(3)5.如何设计一个电子计算器(2)6.我博客上的围棋js程序(2)7.一个简单的完全信息动态博弈的解答(1)8.Windows下安装DrRacket(1)9.python和C语言混编的几种方式(1)10.scheme实现最基本的自然数下的运算(1)11.什么是算法(1)12.C语言/原子/编译，你真的明白了吗？(1)13.我为什么写博客？(1)14.这真的是初三教科书里的概率题么?(1)15.斐波那契数列的算法分析(1)16.自然数到底可以表示到多大?(1)17.有限域(2)——理想和商环(1)";


        String newTimes = "";
        String oldTimes = "";

        long start = System.currentTimeMillis();
        System.out.println(util.getSensitiveWord(text));
        long newTime = System.currentTimeMillis() - start;
        newTimes = newTimes + newTime + "-";

        start = System.currentTimeMillis();
        System.out.println(util.replaceSensitiveWord(text,"*"));
        long oldTime = System.currentTimeMillis() - start;
        oldTimes = oldTimes + oldTime + "-";

        System.out.println("新算法耗时："+ newTimes);
        System.out.println("旧算法耗时："+ oldTimes);

    }

}
